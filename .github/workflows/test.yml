name: Test

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      APP_SERVICE: php
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, fileinfo
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none
      - name: Install dependencies
        run: |
          cd api
          composer install --no-interaction
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker images
        uses: docker/bake-action@v4
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          WWWGROUP: 1000
        with:
          pull: true
          load: true
          files: |
            docker-compose.yml
            docker-compose.override.yml
          set: |
            php.cache-from=type=gha,scope=php-${{github.ref}}
            php.cache-from=type=gha,scope=php-refs/heads/main
            php.cache-to=type=gha,scope=php-${{github.ref}},mode=max
            pwa.cache-from=type=gha,scope=pwa-${{github.ref}}
            pwa.cache-from=type=gha,scope=pwa-refs/heads/main
            pwa.cache-to=type=gha,scope=pwa-${{github.ref}},mode=max
      - name: Start services
        working-directory: api
        run: vendor/bin/sail up -d --wait; sleep 1
      - name: Create .env
        working-directory: api
        run: vendor/bin/sail exec php echo "APP_KEY=" > .env
      - name: Create database
        working-directory: api
        run: vendor/bin/sail exec php touch database/database.sqlite
      - name: Fix permission issue
        working-directory: api
        run: vendor/bin/sail exec php chown sail:sail -R .
      - name: Generate app key
        working-directory: api
        run: vendor/bin/sail php artisan key:generate
      - name: Check API reachability
        run: "curl -v --fail-with-body -H 'Accept: application/json' http://localhost/up"
      - name: Check Docs reachability
        run: curl -vk --fail-with-body http://localhost/docs/api
      - name: Check PWA reachability
        run: curl -vk --fail-with-body http://localhost:3000
      - name: Run PHPStan
        working-directory: api
        run: vendor/bin/sail php vendor/bin/phpstan --memory-limit=2G --error-format=github
      - name: Run PHPUnit
        working-directory: api
        run: vendor/bin/sail artisan test
      - name: Run ESLint
        working-directory: api
        run: vendor/bin/sail exec pwa pnpm lint
      - name: Migrate and seed database
        working-directory: api
        run: |
          vendor/bin/sail artisan migrate
          vendor/bin/sail artisan app:import-movies
          vendor/bin/sail artisan db:seed
      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Cache PNPM
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_HOME }}
          key: ${{ runner.os }}-pnpm-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install Dependencies
        working-directory: e2e
        run: pnpm install
      - name: Install Playwright Browsers with Deps
        working-directory: e2e
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright
        working-directory: e2e
        timeout-minutes: 5
        run: pnpm exec playwright test --workers=1
      - name: Debug Services
        if: failure()
        run: |
          docker compose ps
          docker compose logs
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots
          path: pwa/test-results
